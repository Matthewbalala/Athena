// Code generated by protoc-gen-go. DO NOT EDIT.
// source: persistent_msgs.proto

package pvtdatastorage

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExpiryData struct {
	Map                  map[string]*NamespaceExpiryData `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ExpiryData) Reset()         { *m = ExpiryData{} }
func (m *ExpiryData) String() string { return proto.CompactTextString(m) }
func (*ExpiryData) ProtoMessage()    {}
func (*ExpiryData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0cbd2d16bac879, []int{0}
}

func (m *ExpiryData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpiryData.Unmarshal(m, b)
}
func (m *ExpiryData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpiryData.Marshal(b, m, deterministic)
}
func (m *ExpiryData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpiryData.Merge(m, src)
}
func (m *ExpiryData) XXX_Size() int {
	return xxx_messageInfo_ExpiryData.Size(m)
}
func (m *ExpiryData) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpiryData.DiscardUnknown(m)
}

var xxx_messageInfo_ExpiryData proto.InternalMessageInfo

func (m *ExpiryData) GetMap() map[string]*NamespaceExpiryData {
	if m != nil {
		return m.Map
	}
	return nil
}

type NamespaceExpiryData struct {
	// for pvt data, there would be an
	// entry in TxNums
	PresentData map[string]*TxNums `protobuf:"bytes,1,rep,name=presentData,proto3" json:"presentData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// for any number of missing pvt data of a collection,
	// there would be an entry in the map
	MissingData map[string]bool `protobuf:"bytes,2,rep,name=missingData,proto3" json:"missingData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	//entries for hashes for the pvtdata key-values (loaded from snapshot data)
	BootKVHashes         map[string]*TxNums `protobuf:"bytes,3,rep,name=bootKVHashes,proto3" json:"bootKVHashes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *NamespaceExpiryData) Reset()         { *m = NamespaceExpiryData{} }
func (m *NamespaceExpiryData) String() string { return proto.CompactTextString(m) }
func (*NamespaceExpiryData) ProtoMessage()    {}
func (*NamespaceExpiryData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0cbd2d16bac879, []int{1}
}

func (m *NamespaceExpiryData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamespaceExpiryData.Unmarshal(m, b)
}
func (m *NamespaceExpiryData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamespaceExpiryData.Marshal(b, m, deterministic)
}
func (m *NamespaceExpiryData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamespaceExpiryData.Merge(m, src)
}
func (m *NamespaceExpiryData) XXX_Size() int {
	return xxx_messageInfo_NamespaceExpiryData.Size(m)
}
func (m *NamespaceExpiryData) XXX_DiscardUnknown() {
	xxx_messageInfo_NamespaceExpiryData.DiscardUnknown(m)
}

var xxx_messageInfo_NamespaceExpiryData proto.InternalMessageInfo

func (m *NamespaceExpiryData) GetPresentData() map[string]*TxNums {
	if m != nil {
		return m.PresentData
	}
	return nil
}

func (m *NamespaceExpiryData) GetMissingData() map[string]bool {
	if m != nil {
		return m.MissingData
	}
	return nil
}

func (m *NamespaceExpiryData) GetBootKVHashes() map[string]*TxNums {
	if m != nil {
		return m.BootKVHashes
	}
	return nil
}

type BootKVHash struct {
	KeyHash              []byte   `protobuf:"bytes,1,opt,name=keyHash,proto3" json:"keyHash,omitempty"`
	ValueHash            []byte   `protobuf:"bytes,2,opt,name=valueHash,proto3" json:"valueHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BootKVHash) Reset()         { *m = BootKVHash{} }
func (m *BootKVHash) String() string { return proto.CompactTextString(m) }
func (*BootKVHash) ProtoMessage()    {}
func (*BootKVHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0cbd2d16bac879, []int{2}
}

func (m *BootKVHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BootKVHash.Unmarshal(m, b)
}
func (m *BootKVHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BootKVHash.Marshal(b, m, deterministic)
}
func (m *BootKVHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BootKVHash.Merge(m, src)
}
func (m *BootKVHash) XXX_Size() int {
	return xxx_messageInfo_BootKVHash.Size(m)
}
func (m *BootKVHash) XXX_DiscardUnknown() {
	xxx_messageInfo_BootKVHash.DiscardUnknown(m)
}

var xxx_messageInfo_BootKVHash proto.InternalMessageInfo

func (m *BootKVHash) GetKeyHash() []byte {
	if m != nil {
		return m.KeyHash
	}
	return nil
}

func (m *BootKVHash) GetValueHash() []byte {
	if m != nil {
		return m.ValueHash
	}
	return nil
}

type BootKVHashes struct {
	List                 []*BootKVHash `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *BootKVHashes) Reset()         { *m = BootKVHashes{} }
func (m *BootKVHashes) String() string { return proto.CompactTextString(m) }
func (*BootKVHashes) ProtoMessage()    {}
func (*BootKVHashes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0cbd2d16bac879, []int{3}
}

func (m *BootKVHashes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BootKVHashes.Unmarshal(m, b)
}
func (m *BootKVHashes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BootKVHashes.Marshal(b, m, deterministic)
}
func (m *BootKVHashes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BootKVHashes.Merge(m, src)
}
func (m *BootKVHashes) XXX_Size() int {
	return xxx_messageInfo_BootKVHashes.Size(m)
}
func (m *BootKVHashes) XXX_DiscardUnknown() {
	xxx_messageInfo_BootKVHashes.DiscardUnknown(m)
}

var xxx_messageInfo_BootKVHashes proto.InternalMessageInfo

func (m *BootKVHashes) GetList() []*BootKVHash {
	if m != nil {
		return m.List
	}
	return nil
}

type TxNums struct {
	List                 []uint64 `protobuf:"varint,1,rep,packed,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxNums) Reset()         { *m = TxNums{} }
func (m *TxNums) String() string { return proto.CompactTextString(m) }
func (*TxNums) ProtoMessage()    {}
func (*TxNums) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0cbd2d16bac879, []int{4}
}

func (m *TxNums) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxNums.Unmarshal(m, b)
}
func (m *TxNums) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxNums.Marshal(b, m, deterministic)
}
func (m *TxNums) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxNums.Merge(m, src)
}
func (m *TxNums) XXX_Size() int {
	return xxx_messageInfo_TxNums.Size(m)
}
func (m *TxNums) XXX_DiscardUnknown() {
	xxx_messageInfo_TxNums.DiscardUnknown(m)
}

var xxx_messageInfo_TxNums proto.InternalMessageInfo

func (m *TxNums) GetList() []uint64 {
	if m != nil {
		return m.List
	}
	return nil
}

type CollElgInfo struct {
	NsCollMap            map[string]*CollNames `protobuf:"bytes,1,rep,name=nsCollMap,proto3" json:"nsCollMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CollElgInfo) Reset()         { *m = CollElgInfo{} }
func (m *CollElgInfo) String() string { return proto.CompactTextString(m) }
func (*CollElgInfo) ProtoMessage()    {}
func (*CollElgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0cbd2d16bac879, []int{5}
}

func (m *CollElgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollElgInfo.Unmarshal(m, b)
}
func (m *CollElgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollElgInfo.Marshal(b, m, deterministic)
}
func (m *CollElgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollElgInfo.Merge(m, src)
}
func (m *CollElgInfo) XXX_Size() int {
	return xxx_messageInfo_CollElgInfo.Size(m)
}
func (m *CollElgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CollElgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CollElgInfo proto.InternalMessageInfo

func (m *CollElgInfo) GetNsCollMap() map[string]*CollNames {
	if m != nil {
		return m.NsCollMap
	}
	return nil
}

type CollNames struct {
	Entries              []string `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollNames) Reset()         { *m = CollNames{} }
func (m *CollNames) String() string { return proto.CompactTextString(m) }
func (*CollNames) ProtoMessage()    {}
func (*CollNames) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0cbd2d16bac879, []int{6}
}

func (m *CollNames) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollNames.Unmarshal(m, b)
}
func (m *CollNames) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollNames.Marshal(b, m, deterministic)
}
func (m *CollNames) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollNames.Merge(m, src)
}
func (m *CollNames) XXX_Size() int {
	return xxx_messageInfo_CollNames.Size(m)
}
func (m *CollNames) XXX_DiscardUnknown() {
	xxx_messageInfo_CollNames.DiscardUnknown(m)
}

var xxx_messageInfo_CollNames proto.InternalMessageInfo

func (m *CollNames) GetEntries() []string {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterType((*ExpiryData)(nil), "pvtdatastorage.ExpiryData")
	proto.RegisterMapType((map[string]*NamespaceExpiryData)(nil), "pvtdatastorage.ExpiryData.MapEntry")
	proto.RegisterType((*NamespaceExpiryData)(nil), "pvtdatastorage.NamespaceExpiryData")
	proto.RegisterMapType((map[string]*TxNums)(nil), "pvtdatastorage.NamespaceExpiryData.BootKVHashesEntry")
	proto.RegisterMapType((map[string]bool)(nil), "pvtdatastorage.NamespaceExpiryData.MissingDataEntry")
	proto.RegisterMapType((map[string]*TxNums)(nil), "pvtdatastorage.NamespaceExpiryData.PresentDataEntry")
	proto.RegisterType((*BootKVHash)(nil), "pvtdatastorage.BootKVHash")
	proto.RegisterType((*BootKVHashes)(nil), "pvtdatastorage.BootKVHashes")
	proto.RegisterType((*TxNums)(nil), "pvtdatastorage.TxNums")
	proto.RegisterType((*CollElgInfo)(nil), "pvtdatastorage.CollElgInfo")
	proto.RegisterMapType((map[string]*CollNames)(nil), "pvtdatastorage.CollElgInfo.NsCollMapEntry")
	proto.RegisterType((*CollNames)(nil), "pvtdatastorage.CollNames")
}

func init() { proto.RegisterFile("persistent_msgs.proto", fileDescriptor_0f0cbd2d16bac879) }

var fileDescriptor_0f0cbd2d16bac879 = []byte{
	// 481 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xdf, 0x6a, 0xdb, 0x3e,
	0x14, 0xc7, 0x71, 0x92, 0x5f, 0x7f, 0xf5, 0x49, 0x28, 0x99, 0xf6, 0x07, 0xcf, 0xf4, 0x22, 0x78,
	0x0c, 0xca, 0x18, 0x36, 0x6c, 0x2b, 0x74, 0xbd, 0xe8, 0x45, 0xd7, 0x40, 0xc7, 0x48, 0x18, 0x66,
	0xa4, 0x6c, 0xbb, 0x18, 0x4a, 0x7a, 0xea, 0x98, 0xda, 0x96, 0x90, 0x94, 0x52, 0x3f, 0xc6, 0xde,
	0x60, 0x8f, 0xb0, 0x47, 0x1c, 0x96, 0x9d, 0x5a, 0xf6, 0x7c, 0x91, 0x8b, 0xdd, 0x49, 0xe7, 0x7c,
	0xbf, 0x9f, 0x73, 0x74, 0x24, 0x1b, 0x9e, 0x72, 0x14, 0x32, 0x96, 0x0a, 0x33, 0xf5, 0x23, 0x95,
	0x91, 0xf4, 0xb9, 0x60, 0x8a, 0x91, 0x03, 0x7e, 0xa7, 0xae, 0xa9, 0xa2, 0x52, 0x31, 0x41, 0x23,
	0xf4, 0x7e, 0x59, 0x00, 0xd3, 0x7b, 0x1e, 0x8b, 0xfc, 0x82, 0x2a, 0x4a, 0x8e, 0xa1, 0x9f, 0x52,
	0xee, 0x58, 0x93, 0xfe, 0xd1, 0xf0, 0xcd, 0x0b, 0xbf, 0x29, 0xf6, 0x6b, 0xa1, 0x3f, 0xa3, 0x7c,
	0x9a, 0x29, 0x91, 0x87, 0x85, 0xde, 0xfd, 0x0e, 0xfb, 0xdb, 0x00, 0x19, 0x43, 0xff, 0x16, 0x73,
	0xc7, 0x9a, 0x58, 0x47, 0x76, 0x58, 0x2c, 0xc9, 0x7b, 0xf8, 0xef, 0x8e, 0x26, 0x1b, 0x74, 0x7a,
	0x13, 0xab, 0x0b, 0x3b, 0xa7, 0x29, 0x4a, 0x4e, 0x57, 0x58, 0xf3, 0xc3, 0xd2, 0x71, 0xda, 0x3b,
	0xb1, 0xbc, 0x9f, 0x03, 0x78, 0xdc, 0x21, 0x21, 0x0b, 0x18, 0x72, 0x81, 0x12, 0x33, 0x55, 0x6c,
	0xab, 0x9e, 0xdf, 0xed, 0x00, 0xf7, 0x3f, 0xd7, 0xb6, 0xf2, 0x10, 0x26, 0xa8, 0xe0, 0xa6, 0xb1,
	0x94, 0x71, 0x16, 0x69, 0x6e, 0x6f, 0x77, 0xee, 0xac, 0xb6, 0x55, 0x5c, 0x03, 0x44, 0xbe, 0xc2,
	0x68, 0xc9, 0x98, 0xfa, 0xb4, 0xb8, 0xa4, 0x72, 0x8d, 0xd2, 0xe9, 0x6b, 0xf0, 0xf1, 0x2e, 0xe0,
	0x73, 0xc3, 0x57, 0x92, 0x1b, 0x28, 0x77, 0x01, 0xe3, 0xf6, 0x99, 0x3a, 0xee, 0xe1, 0x75, 0xf3,
	0x1e, 0x9e, 0xb5, 0x2b, 0x7f, 0xb9, 0x9f, 0x6f, 0x52, 0x69, 0x8c, 0xde, 0x3d, 0x83, 0x71, 0xfb,
	0x4c, 0x1d, 0xdc, 0x27, 0x26, 0x77, 0xdf, 0xf4, 0x5f, 0xc1, 0xa3, 0xbf, 0x5a, 0xff, 0x17, 0x8d,
	0x79, 0x17, 0x00, 0x35, 0x98, 0x38, 0xf0, 0xff, 0x2d, 0xe6, 0xc5, 0x52, 0x53, 0x47, 0xe1, 0x76,
	0x4b, 0x0e, 0xc1, 0xd6, 0x26, 0x9d, 0xeb, 0xe9, 0x5c, 0x1d, 0xf0, 0xce, 0x60, 0x64, 0xb6, 0x47,
	0x7c, 0x18, 0x24, 0xb1, 0x54, 0xd5, 0x53, 0x72, 0xdb, 0x6d, 0xd4, 0xda, 0x50, 0xeb, 0xbc, 0x43,
	0xd8, 0x2b, 0x5b, 0x23, 0xc4, 0x70, 0x0e, 0xaa, 0xec, 0x6f, 0x0b, 0x86, 0x1f, 0x58, 0x92, 0x4c,
	0x93, 0xe8, 0x63, 0x76, 0xc3, 0xc8, 0x25, 0xd8, 0x99, 0x2c, 0x02, 0xb3, 0x87, 0x2f, 0xec, 0x55,
	0xbb, 0x84, 0xa1, 0xf7, 0xe7, 0x5b, 0x71, 0x79, 0xe3, 0xb5, 0xd9, 0xbd, 0x82, 0x83, 0x66, 0xb2,
	0x63, 0xa6, 0x41, 0x73, 0xa6, 0xcf, 0xbb, 0x2a, 0xe9, 0xa7, 0x66, 0x8e, 0xf5, 0x25, 0xd8, 0x0f,
	0xf1, 0x62, 0xaa, 0x98, 0x29, 0x11, 0xa3, 0xd4, 0xdd, 0xda, 0xe1, 0x76, 0x7b, 0x7e, 0xfa, 0xed,
	0x24, 0x8a, 0xd5, 0x7a, 0xb3, 0xf4, 0x57, 0x2c, 0x0d, 0xd6, 0x39, 0x47, 0x91, 0xe0, 0x75, 0x84,
	0x22, 0xb8, 0xa1, 0x4b, 0x11, 0xaf, 0x82, 0x15, 0x13, 0x18, 0x54, 0xa1, 0x66, 0xdd, 0xe5, 0x9e,
	0xfe, 0x0f, 0xbd, 0xfd, 0x13, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x8d, 0x56, 0x84, 0xa0, 0x04, 0x00,
	0x00,
}
